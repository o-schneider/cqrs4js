{"version":3,"sources":["../../src/main/js/view/createView.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;oCAEiB,0BAA0B;;sBAC7B,QAAQ;;0BACf,gBAAgB;;sBACtB,QAAQ;;;;AAEtB,IAAM,GAAG,GAAG,KAAK,CAAC;;AAEX,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,QAAQ,EAAE,YAAY,EAAsC;oCAAjC,4BAA4B;AAA5B,gCAA4B;;;AAChF,MAAM,MAAM,GAAG,2CAAgB,4BAA4B,CAAC,CAAC;AAC7D,oBAAM,OAAO,CAAC,EAAC,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC;;AAEtC,MAAM,cAAc,GAAG,0BAAkB,CAAC;AAC1C,MAAI,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;;AAEjC,8BAA4B,CAAC,OAAO,CAAC,UAAC,aAAa,EAAK;AACtD,QAAM,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;AAChC,QAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;;AAEpC,QAAI,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,GAAG,cAAc,GAAG,MAAM,CAAC,CAAC;;AAEjF,YAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,UAAC,KAAK,EAAK;AAClC,UAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAI,QAAQ,KAAK,KAAK,EAAE;AACtB,aAAK,GAAG,QAAQ,CAAC;AACjB,sBAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;OACtC,MAAM,IAAI,GAAG,EAAE;AACd,eAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,KAAK,EAAE,gBAAgB,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;OAC7F;KACF,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,gBAAc,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,GAAG,EAAK;AAC1C,QAAI,GAAG,EAAE;AACP,aAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;KACjD;AACD,kBAAc,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AACjC,OAAG,CAAC,KAAK,CAAC,CAAC;GACZ,CAAC,CAAC;;AAEH,SAAO,UAAC,GAAG,EAAK;AACd,QAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,KAAK;aAAK,GAAG,CAAC,KAAK,CAAC;KAAA,CAAC;AAChD,kBAAc,CAAC,IAAI,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;AACxD,WAAO,UAAC,EAAE,EAAK;AACb,UAAI,GAAG,EAAE;AACP,eAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,iBAAiB,GAAG,GAAG,CAAC,CAAC;OAC5D;AACD,oBAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAC3D,QAAE,EAAE,CAAC;KACN,CAAA;GACF,CAAC;CACH,CAAC","file":"createView.js","sourcesContent":["'use strict';\n\nimport {initStateHolder} from \"../utils/initStateHolder\"\nimport {EventEmitter} from 'events';\nimport {check} from '../utils/check';\nimport _ from 'lodash';\n\nconst log = false;\n\nexport const createView = (eventBus, initialState, ...listenedEventNamesAndActions) => {\n  const freeze = initStateHolder(listenedEventNamesAndActions);\n  check.notNull({'eventBus': eventBus});\n\n  const messageEmitter = new EventEmitter();\n  let state = freeze(initialState);\n\n  listenedEventNamesAndActions.forEach((actionAndName) => {\n    const name = actionAndName.name;\n    const action = actionAndName.action;\n\n    if (log) console.log('about to register name ' + name + \" and action \" + action);\n\n    eventBus.subscribe(name, (event) => {\n      const newState = freeze(action(event, state));\n      if (newState !== state) {\n        state = newState;\n        messageEmitter.emit('change', state);\n      } else if (log) {\n        console.log(\"No change detected. Previous state '\", state, \"', new state '\", newState, \"'\");\n      }\n    });\n  });\n\n  messageEmitter.on('addSubscriber', (cbk) => {\n    if (log) {\n      console.log(\"about to subscribe '\" + cbk + \"'\");\n    }\n    messageEmitter.on('change', cbk);\n    cbk(state);\n  });\n\n  return (cbk) => {\n    const effectiveCallback = (state) => cbk(state);\n    messageEmitter.emit('addSubscriber', effectiveCallback);\n    return (cb) => {\n      if (log) {\n        console.log(\"about to remove '\" + effectiveCallback + \"'\");\n      }\n      messageEmitter.removeListener('change', effectiveCallback);\n      cb();\n    }\n  };\n};\n"]}